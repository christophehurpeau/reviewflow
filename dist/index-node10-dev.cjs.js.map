{"version":3,"file":"index-node10-dev.cjs.js","sources":["../src/orgsConfigs/ornikar.ts","../src/orgsConfigs/christophehurpeau.ts","../src/orgsConfigs/index.ts","../src/pr-handlers/actions/utils/prOptions.ts","../src/pr-handlers/actions/utils/parseBody.ts","../src/pr-handlers/actions/autoMergeIfPossible.ts","../src/context/initRepoLabels.ts","../src/context/utils.ts","../src/context/initTeamSlack.ts","../src/context/orgContext.ts","../src/context/repoContext.ts","../src/pr-handlers/utils.ts","../src/pr-handlers/actions/autoAssignPRToCreator.ts","../src/pr-handlers/actions/utils/cleanTitle.ts","../src/pr-handlers/actions/utils/updateBody.ts","../src/pr-handlers/actions/editOpenedPR.ts","../src/pr-handlers/actions/updateStatusCheckFromLabels.ts","../src/pr-handlers/actions/updateReviewStatus.ts","../src/pr-handlers/actions/autoApproveAndAutoMerge.ts","../src/pr-handlers/opened.ts","../src/pr-handlers/closed.ts","../src/pr-handlers/reviewRequested.ts","../src/pr-handlers/reviewRequestRemoved.ts","../src/pr-handlers/reviewSubmitted.ts","../src/pr-handlers/reviewDismissed.ts","../src/pr-handlers/synchronize.ts","../src/pr-handlers/edited.ts","../src/pr-handlers/actions/updatePrBody.ts","../src/pr-handlers/labelsChanged.ts","../src/pr-handlers/checkrunCompleted.ts","../src/pr-handlers/checksuiteCompleted.ts","../src/pr-handlers/status.ts","../src/mongo.ts","../src/views/Layout.tsx","../src/auth/github.ts","../src/utils/random.ts","../src/appRouter.tsx","../src/index.ts"],"sourcesContent":["/* eslint-disable max-lines */\n\nimport { Config } from './types';\n\nconst config: Config<'dev' | 'design', 'archis' | 'frontends' | 'backends'> = {\n  slackToken: process.env.ORNIKAR_SLACK_TOKEN,\n  autoAssignToCreator: true,\n  trimTitle: true,\n  requiresReviewRequest: true,\n  prDefaultOptions: {\n    featureBranch: false,\n    autoMergeWithSkipCi: false,\n    autoMerge: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [\n      {\n        regExp:\n          // eslint-disable-next-line unicorn/no-unsafe-regex\n          /^(revert: )?(build|chore|ci|docs|feat|fix|perf|refactor|style|test)(\\(([a-z\\-/]*)\\))?:\\s/,\n        error: {\n          title: 'Title does not match commitlint conventional',\n          summary:\n            'https://github.com/marionebl/commitlint/tree/master/%40commitlint/config-conventional',\n        },\n      },\n      {\n        bot: false,\n        regExp: /\\s([A-Z]{2,}-(\\d+)|\\[no issue])$/,\n        error: {\n          title: 'Title does not have JIRA issue',\n          summary: 'The PR title should end with ONK-0000, or [no issue]',\n        },\n        status: 'jira-issue',\n        statusInfoFromMatch: (match) => {\n          const issue = match[1];\n          if (issue === '[no issue]') {\n            return {\n              title: 'No issue',\n              summary: '',\n            };\n          }\n          return {\n            inBody: true,\n            url: `https://ornikar.atlassian.net/browse/${issue}`,\n            title: `JIRA issue: ${issue}`,\n            summary: `[${issue}](https://ornikar.atlassian.net/browse/${issue})`,\n          };\n        },\n      },\n    ],\n  },\n\n  groups: {\n    dev: {\n      /* archi */\n      JulienBreux: `julien.breux${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n\n      /* back */\n      abarreir: `alexandre${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      arthurflachs: `arthur${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      rigma: `romain${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      damienorny: `damien.orny${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      'Thierry-girod': `thierry${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      darame07: `kevin${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Pixy: `pierre-alexis${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n\n      /* front */\n      christophehurpeau: `christophe${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      HugoGarrido: `hugo${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      LentnerStefan: `stefan${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      CorentinAndre: `corentin${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      Mxime: `maxime${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      tilap: `julien.lavinh${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      vlbr: `valerian${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n    },\n    design: {\n      jperriere: `julien${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n      CoralineColasse: `coraline${process.env.ORNIKAR_EMAIL_DOMAIN}`,\n    },\n  },\n\n  teams: {\n    archis: {\n      logins: ['JulienBreux'],\n      labels: ['teams/archi'],\n    },\n\n    backends: {\n      logins: [\n        'abarreir',\n        'arthurflachs',\n        'rigma',\n        'damienorny',\n        'Thierry-girod',\n        'darame07',\n        'Pixy',\n      ],\n      labels: ['teams/backend'],\n    },\n\n    frontends: {\n      logins: [\n        'christophehurpeau',\n        'HugoGarrido',\n        'LentnerStefan',\n        'CorentinAndre',\n        'Mxime',\n        'tilap',\n        'vlbr',\n      ],\n      labels: ['teams/frontend'],\n    },\n  },\n\n  waitForGroups: {\n    dev: [],\n    design: ['dev'],\n  },\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* code */\n      'code/needs-review': {\n        name: ':ok_hand: code/needs-review',\n        color: '#FFC44C',\n      },\n      'code/review-requested': {\n        name: ':ok_hand: code/review-requested',\n        color: '#DAE1E6',\n      },\n      'code/changes-requested': {\n        name: ':ok_hand: code/changes-requested',\n        color: '#e11d21',\n      },\n      'code/approved': {\n        name: ':ok_hand: code/approved',\n        color: '#64DD17',\n      },\n\n      /* design */\n      'design/needs-review': {\n        name: ':art: design/needs-review',\n        color: '#FFC44C',\n      },\n      'design/review-requested': {\n        name: ':art: design/review-requested',\n        color: '#DAE1E6',\n      },\n      'design/changes-requested': {\n        name: ':art: design/changes-requested',\n        color: '#e11d21',\n      },\n      'design/approved': {\n        name: ':art: design/approved',\n        color: '#64DD17',\n      },\n\n      /* teams */\n      'teams/archi': {\n        name: 'archi',\n        color: '#003b55',\n      },\n      'teams/backend': {\n        name: 'backend',\n        color: '#6ad8cb',\n      },\n      'teams/frontend': {\n        name: 'frontend',\n        color: '#8a5abc',\n      },\n\n      /* auto merge */\n      'merge/automerge': {\n        name: ':soon: automerge',\n        color: '#64DD17',\n      },\n\n      /* feature-branch */\n      'feature-branch': {\n        name: 'feature-branch',\n        color: '#7FCEFF',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n      dev: {\n        needsReview: 'code/needs-review',\n        requested: 'code/review-requested',\n        changesRequested: 'code/changes-requested',\n        approved: 'code/approved',\n      },\n      design: {\n        needsReview: 'design/needs-review',\n        requested: 'design/review-requested',\n        changesRequested: 'design/changes-requested',\n        approved: 'design/approved',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config } from './types';\n\nconst config: Config<'dev', never> = {\n  autoAssignToCreator: true,\n  trimTitle: true,\n  requiresReviewRequest: false,\n  prDefaultOptions: {\n    featureBranch: false,\n    autoMergeWithSkipCi: false,\n    autoMerge: false,\n    deleteAfterMerge: true,\n  },\n  parsePR: {\n    title: [\n      {\n        regExp:\n          // eslint-disable-next-line unicorn/no-unsafe-regex\n          /^(revert: )?(build|chore|ci|docs|feat|fix|perf|refactor|style|test)(\\(([a-z\\-/]*)\\))?:\\s/,\n        error: {\n          title: 'Title does not match commitlint conventional',\n          summary:\n            'https://github.com/marionebl/commitlint/tree/master/%40commitlint/config-conventional',\n        },\n      },\n    ],\n  },\n  groups: {\n    dev: {\n      christophehurpeau: 'christophe@hurpeau.com',\n      'chris-reviewflow': 'christophe.hurpeau+reviewflow@gmail.com',\n      tilap: 'jlavinh@gmail.com',\n    },\n  },\n  waitForGroups: {\n    dev: [],\n  },\n  teams: {},\n  labels: {\n    list: {\n      // /* ci */\n      // 'ci/in-progress': { name: ':green_heart: ci/in-progress', color: '#0052cc' },\n      // 'ci/fail': { name: ':green_heart: ci/fail', color: '#e11d21' },\n      // 'ci/passed': { name: ':green_heart: ci/passed', color: '#86f9b4' },\n\n      /* code */\n      'code/needs-review': {\n        name: ':ok_hand: code/needs-review',\n        color: '#FFD57F',\n      },\n      'code/review-requested': {\n        name: ':ok_hand: code/review-requested',\n        color: '#B2E1FF',\n      },\n      'code/changes-requested': {\n        name: ':ok_hand: code/changes-requested',\n        color: '#e11d21',\n      },\n      'code/approved': {\n        name: ':ok_hand: code/approved',\n        color: '#64DD17',\n      },\n\n      /* auto merge */\n      'merge/automerge': {\n        name: ':soon: automerge',\n        color: '#64DD17',\n      },\n\n      /* feature-branch */\n      'feature-branch': {\n        name: 'feature-branch',\n        color: '#7FCEFF',\n      },\n    },\n\n    review: {\n      ci: {\n        inProgress: 'ci/in-progress',\n        succeeded: 'ci/success',\n        failed: 'ci/fail',\n      },\n      dev: {\n        needsReview: 'code/needs-review',\n        requested: 'code/review-requested',\n        changesRequested: 'code/changes-requested',\n        approved: 'code/approved',\n      },\n    },\n  },\n};\n\nexport default config;\n","import { Config as ConfigType } from './types';\nimport ornikar from './ornikar';\nimport christophehurpeau from './christophehurpeau';\n\nexport type Config<\n  GroupNames extends string = any,\n  TeamNames extends string = any\n> = ConfigType<GroupNames, TeamNames>;\n\nexport const orgsConfigs: { [owner: string]: Config } = {\n  ornikar,\n  christophehurpeau,\n};\n\n// flat requires node 11\n// export const getMembers = <GroupNames extends string = any>(\n//   groups: Record<GroupNames, Group>,\n// ): string[] => {\n//   return Object.values(groups).flat(1);\n// };\n","export type Options =\n  | 'featureBranch'\n  | 'autoMergeWithSkipCi'\n  | 'autoMerge'\n  | 'deleteAfterMerge';\n\nexport const options: Options[] = [\n  'featureBranch',\n  'autoMergeWithSkipCi',\n  'autoMerge',\n  'deleteAfterMerge',\n];\nexport const optionsRegexps: { name: Options; regexp: RegExp }[] = options.map(\n  (option) => ({\n    name: option,\n    regexp: new RegExp(`\\\\[([ xX]?)]\\\\s*<!-- reviewflow-${option} -->`),\n  }),\n);\n\nexport const optionsLabels: { name: Options; label: string }[] = [\n  { name: 'featureBranch', label: 'This PR is a feature branch' },\n  {\n    name: 'autoMergeWithSkipCi',\n    label: 'Auto merge with `[skip ci]`',\n  },\n  {\n    name: 'autoMerge',\n    label:\n      'Auto merge when this PR is ready and has no failed statuses. (Also has a queue per repo to prevent multiple useless \"Update branch\" triggers)',\n  },\n  {\n    name: 'deleteAfterMerge',\n    label: 'Automatic branch delete after this PR is merged',\n  },\n];\n","import { Options, optionsRegexps } from './prOptions';\n\nconst commentStart = '<!-- do not edit after this -->';\nconst commentEnd = \"<!-- end - don't add anything after this -->\";\n\nconst regexpCols = /^(.*)(<!---? do not edit after this -?-->(.*)<!---? end - don't add anything after this -?-->)(.*)$/is;\nconst regexpReviewflowCol = /^(\\s*<!---? do not edit after this -?--><\\/td><td [^>]*>)\\s*(.*)\\s*(<\\/td><\\/tr><\\/table>\\s*<!---? end - don't add anything after this -?-->)\\s*$/is;\n\nconst parseOptions = (\n  content: string,\n  defaultConfig: Record<Options, boolean>,\n): Record<Options, boolean> => {\n  return optionsRegexps.reduce(\n    (acc, { name, regexp }) => {\n      const match = regexp.exec(content);\n      acc[name] = !match\n        ? defaultConfig[name] || false\n        : match[1] === 'x' || match[1] === 'X';\n      return acc;\n    },\n    {} as any,\n  ) as Record<Options, boolean>;\n};\n\nexport const parseBody = (\n  description: string,\n  defaultConfig: Record<Options, boolean>,\n) => {\n  const match = regexpCols.exec(description);\n  if (!match) return null;\n  const [, content, reviewFlowCol, reviewflowContent, ending] = match;\n  const reviewFlowColMatch = regexpReviewflowCol.exec(reviewFlowCol);\n  if (!reviewFlowColMatch) {\n    return {\n      content,\n      ending,\n      reviewflowContentCol: reviewflowContent,\n      reviewflowContentColPrefix: commentStart,\n      reviewflowContentColSuffix: commentEnd,\n      options: parseOptions(reviewFlowCol, defaultConfig),\n    };\n  }\n  const [\n    ,\n    reviewflowContentColPrefix,\n    reviewflowContentCol,\n    reviewflowContentColSuffix,\n  ] = reviewFlowColMatch;\n\n  return {\n    content,\n    ending,\n    reviewflowContentCol,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n    options: parseOptions(reviewflowContentCol, defaultConfig),\n  };\n};\n","/* eslint-disable max-lines */\nimport { Context } from 'probot';\n// eslint-disable-next-line import/no-cycle\nimport { RepoContext } from '../../context/repoContext';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { parseBody } from './utils/parseBody';\n\nconst hasFailedStatusOrChecks = async (\n  context: Context<any>,\n  repoContext: RepoContext,\n  pr: any,\n) => {\n  const checks = await context.github.checks.listForRef(\n    context.repo({\n      ref: pr.head.sha,\n      per_page: 100,\n    }),\n  );\n\n  const failedChecks = checks.data.check_runs.filter(\n    (check) => check.conclusion === 'failure',\n  );\n\n  if (failedChecks.length !== 0) {\n    context.log.info(`automerge not possible: failed check pr ${pr.id}`, {\n      checks: failedChecks.map((check) => check.name),\n    });\n    return true;\n  }\n\n  const combinedStatus = await context.github.repos.getCombinedStatusForRef(\n    context.repo({\n      ref: pr.head.sha,\n      per_page: 100,\n    }),\n  );\n\n  if (combinedStatus.data.state === 'failure') {\n    const failedStatuses = combinedStatus.data.statuses.filter(\n      (status) => status.state === 'failure' || status.state === 'error',\n    );\n\n    context.log.info(`automerge not possible: failed status pr ${pr.id}`, {\n      statuses: failedStatuses.map((status) => status.context),\n    });\n\n    return true;\n  }\n\n  return false;\n};\n\nexport const autoMergeIfPossible = async (\n  context: Context<any>,\n  repoContext: RepoContext,\n  pr: any = context.payload.pull_request,\n  prLabels: LabelResponse[] = pr.labels,\n): Promise<boolean> => {\n  const autoMergeLabel = repoContext.labels['merge/automerge'];\n  if (!autoMergeLabel) return false;\n\n  const createMergeLockPrFromPr = () => ({\n    id: pr.id,\n    number: pr.number,\n    branch: pr.head.ref,\n  });\n\n  if (!prLabels.find((l): boolean => l.id === autoMergeLabel.id)) {\n    context.log.debug('automerge not possible: no label', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    return false;\n  }\n\n  if (pr.state !== 'open') {\n    context.log.debug('automerge not possible: pr is not opened', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n  }\n\n  if (\n    repoContext.hasNeedsReview(prLabels) ||\n    repoContext.hasRequestedReview(prLabels)\n  ) {\n    context.log.debug('automerge not possible: blocking labels', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    return false;\n  }\n\n  const lockedPr = repoContext.getMergeLockedPr();\n  if (lockedPr && lockedPr.number !== pr.number) {\n    context.log.info('automerge not possible: locked pr', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    repoContext.pushAutomergeQueue(createMergeLockPrFromPr());\n    return false;\n  }\n\n  repoContext.addMergeLockPr(createMergeLockPrFromPr());\n\n  if (pr.mergeable === undefined) {\n    const prResult = await context.github.pulls.get(\n      context.repo({\n        pull_number: pr.number,\n      }),\n    );\n    pr = prResult.data;\n  }\n\n  if (pr.merged) {\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    context.log.info('automerge not possible: already merged pr', {\n      prId: pr.id,\n      prNumber: pr.number,\n    });\n    return false;\n  }\n\n  context.log.info(\n    `automerge?: ${pr.id}, #${pr.number}, mergeable=${pr.mergeable} state=${\n      pr.mergeable_state\n    }`,\n  );\n\n  // https://github.com/octokit/octokit.net/issues/1763\n  if (\n    !(\n      pr.mergeable_state === 'clean' ||\n      pr.mergeable_state === 'has_hooks' ||\n      pr.mergeable_state === 'unstable'\n    )\n  ) {\n    if (!pr.mergeable_state || pr.mergeable_state === 'unknown') {\n      context.log.info(`automerge not possible: rescheduling ${pr.id}`);\n      // GitHub is determining whether the pull request is mergeable\n      repoContext.reschedule(context, createMergeLockPrFromPr());\n      return false;\n    }\n\n    if (pr.head.ref.startsWith('renovate/')) {\n      if (pr.mergeable_state === 'behind' || pr.mergeable_state === 'dirty') {\n        context.log.info(\n          `automerge not possible: rebase renovate branch pr ${pr.id}`,\n        );\n        // TODO check if has commits not made by renovate https://github.com/ornikar/shared-configs/pull/47#issuecomment-445767120\n\n        if (pr.body.includes('<!-- renovate-rebase -->')) {\n          if (pr.body.includes('[x] <!-- renovate-rebase -->')) {\n            return false;\n          }\n\n          const renovateRebaseBody = pr.body.replace(\n            '[ ] <!-- renovate-rebase -->',\n            '[x] <!-- renovate-rebase -->',\n          );\n          await context.github.issues.update(\n            context.repo({\n              number: pr.number,\n              body: renovateRebaseBody,\n            }),\n          );\n        } else if (!pr.title.startsWith('rebase!')) {\n          await context.github.issues.update(\n            context.repo({\n              number: pr.number,\n              title: `rebase!${pr.title}`,\n            }),\n          );\n        }\n\n        return false;\n      }\n\n      if (await hasFailedStatusOrChecks(context, repoContext, pr)) {\n        repoContext.removePrFromAutomergeQueue(context, pr.number);\n        return false;\n      } else if (pr.mergeable_state === 'blocked') {\n        // waiting for reschedule in status (pr-handler/status.ts)\n        return false;\n      }\n\n      context.log.info(\n        `automerge not possible: renovate with mergeable_state=${\n          pr.mergeable_state\n        }`,\n      );\n      return false;\n    }\n\n    if (pr.mergeable_state === 'blocked') {\n      if (await hasFailedStatusOrChecks(context, repoContext, pr)) {\n        repoContext.removePrFromAutomergeQueue(context, pr.number);\n        return false;\n      } else {\n        // waiting for reschedule in status (pr-handler/status.ts)\n        return false;\n      }\n    }\n\n    if (pr.mergeable_state === 'behind') {\n      context.log.info('automerge not possible: update branch', {\n        head: pr.head.ref,\n        base: pr.base.ref,\n      });\n\n      await context.github.repos.merge({\n        owner: pr.head.repo.owner.login,\n        repo: pr.head.repo.name,\n        head: pr.base.ref,\n        base: pr.head.ref,\n      });\n\n      return false;\n    }\n\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    context.log.info(\n      `automerge not possible: not mergeable mergeable_state=${\n        pr.mergeable_state\n      }`,\n    );\n    return false;\n  }\n\n  try {\n    context.log.info(`automerge pr #${pr.number}`);\n\n    const parsedBody = parseBody(pr.body, repoContext.config.prDefaultOptions);\n    const options =\n      (parsedBody && parsedBody.options) || repoContext.config.prDefaultOptions;\n\n    const mergeResult = await context.github.pulls.merge({\n      merge_method: options.featureBranch ? 'merge' : 'squash',\n      owner: pr.head.repo.owner.login,\n      repo: pr.head.repo.name,\n      pull_number: pr.number,\n      commit_title: `${pr.title}${\n        options.autoMergeWithSkipCi ? ' [skip ci]' : ''\n      } (#${pr.number})`,\n      commit_message: '', // TODO add BC\n    });\n    context.log.debug('merge result:', mergeResult.data);\n    repoContext.removePrFromAutomergeQueue(context, pr.number);\n    return Boolean(mergeResult.data.merged);\n  } catch (err) {\n    context.log.info('could not merge:', err.message);\n    repoContext.reschedule(context, createMergeLockPrFromPr());\n    return false;\n  }\n};\n","import { Context } from 'probot';\nimport { Config } from '../orgsConfigs';\n\nexport interface LabelResponse {\n  id: number;\n  node_id: string;\n  url: string;\n  name: string;\n  description: string;\n  color: string;\n  default: boolean;\n}\n\nexport interface Labels {\n  [key: string]: LabelResponse;\n}\n\nexport const initRepoLabels = async <GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<Labels> => {\n  const { data: labels } = await context.github.issues.listLabelsForRepo(\n    context.repo({ per_page: 100 }),\n  );\n  const finalLabels: Record<string, LabelResponse> = {};\n\n  for (const [labelKey, labelConfig] of Object.entries(config.labels.list)) {\n    const labelColor = labelConfig.color.slice(1);\n    const description = `Generated by review-flow for ${labelKey}`;\n\n    let existingLabel = labels.find((label) => label.name === labelConfig.name);\n    if (!existingLabel) {\n      existingLabel = labels.find((label) => label.description === description);\n    }\n    if (!existingLabel) {\n      if (labelKey === 'design/needs-review') {\n        existingLabel = labels.find(\n          (label) => label.name === 'needs-design-review',\n        );\n      }\n      if (labelKey === 'design/approved') {\n        existingLabel = labels.find(\n          (label) => label.name === 'design-reviewed',\n        );\n      }\n    }\n\n    if (!existingLabel) {\n      const result = await context.github.issues.createLabel(\n        context.repo({\n          name: labelConfig.name,\n          color: labelColor,\n          description,\n        }),\n      );\n      finalLabels[labelKey] = result.data;\n    } else if (\n      existingLabel.name !== labelConfig.name ||\n      existingLabel.color !== labelColor // ||\n      // TODO: description is never updated\n      // existingLabel.description !== description\n    ) {\n      context.log.info('Needs to update label', {\n        current_name: existingLabel.name,\n        name: existingLabel.name !== labelConfig.name && labelConfig.name,\n        color: existingLabel.color !== labelColor && labelColor,\n        description: existingLabel.description !== description && description,\n      });\n\n      const result = await context.github.issues.updateLabel(\n        context.repo({\n          current_name: existingLabel.name,\n          name: labelConfig.name,\n          color: labelColor,\n          description,\n        }),\n      );\n      finalLabels[labelKey] = result.data;\n    } else {\n      finalLabels[labelKey] = existingLabel;\n    }\n  }\n\n  return finalLabels;\n};\n","export const getKeys = <T extends {}>(o: T): (keyof T)[] =>\n  Object.keys(o) as (keyof T)[];\n","import { WebClient } from '@slack/web-api';\nimport { Context } from 'probot';\nimport { Config } from '../orgsConfigs';\nimport { getKeys } from './utils';\n\nexport interface TeamSlack {\n  mention: (githubLogin: string) => string;\n  postMessage: (githubLogin: string, text: string) => Promise<void>;\n}\n\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nexport const initTeamSlack = async <GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<TeamSlack> => {\n  if (!config.slackToken) {\n    return {\n      mention: (githubLogin: string) => '',\n      postMessage: (githubLogin: string, text: string) => Promise.resolve(),\n    };\n  }\n\n  const githubLoginToSlackEmail = getKeys(config.groups).reduce<{\n    [login: string]: string;\n  }>((acc, groupName) => {\n    Object.assign(acc, config.groups[groupName]);\n    return acc;\n  }, {});\n\n  const slackClient = new WebClient(config.slackToken);\n  const allUsers: any = await slackClient.users.list({ limit: 200 });\n  const members: [string, { member: any; im: any }][] = Object.values(\n    githubLoginToSlackEmail,\n  )\n    .map((email) => {\n      const member = allUsers.members.find(\n        (user: any) => user.profile.email === email,\n      );\n      if (!member) {\n        console.warn(`Could not find user ${email}`);\n        return;\n      }\n      return [email, { member, im: undefined }] as [\n        string,\n        { member: any; im: any }\n      ];\n    })\n    .filter(ExcludesFalsy);\n\n  for (const [, user] of members) {\n    try {\n      const im: any = await slackClient.im.open({ user: user.member.id });\n      user.im = im.channel;\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  const membersMap = new Map(members);\n\n  const getUserFromGithubLogin = (githubLogin: string) => {\n    const email = githubLoginToSlackEmail[githubLogin];\n    if (!email) return null;\n    return membersMap.get(email);\n  };\n\n  return {\n    mention: (githubLogin: string) => {\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user) return githubLogin;\n      return `<@${user.member.id}>`;\n    },\n    postMessage: async (githubLogin: string, text: string) => {\n      context.log.info('send slack', { githubLogin, text });\n      if (process.env.DRY_RUN) return;\n\n      const user = getUserFromGithubLogin(githubLogin);\n      if (!user || !user.im) return;\n      await slackClient.chat.postMessage({\n        channel: user.im.id,\n        text,\n      });\n    },\n  };\n};\n","import { Context } from 'probot';\nimport { Config } from '../orgsConfigs';\nimport { initTeamSlack, TeamSlack } from './initTeamSlack';\nimport { getKeys } from './utils';\n\nexport interface OrgContext<\n  GroupNames extends string = any,\n  TeamNames extends string = any\n> {\n  config: Config<GroupNames, TeamNames>;\n  slack: TeamSlack;\n  getReviewerGroup: (githubLogin: string) => string | undefined;\n  getReviewerGroups: (githubLogins: string[]) => string[];\n  getTeamsForLogin: (githubLogin: string) => TeamNames[];\n  reviewShouldWait: (\n    reviewerGroup: GroupNames | undefined,\n    requestedReviewers: any[],\n    {\n      includesReviewerGroup,\n      includesWaitForGroups,\n    }: { includesReviewerGroup?: boolean; includesWaitForGroups?: boolean },\n  ) => boolean;\n}\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nconst initTeamContext = async (\n  context: Context<any>,\n  config: Config,\n): Promise<OrgContext> => {\n  const slackPromise = initTeamSlack(context, config);\n\n  const githubLoginToGroup = new Map<string, string>();\n  getKeys(config.groups).forEach((groupName) => {\n    Object.keys(config.groups[groupName]).forEach((login) => {\n      githubLoginToGroup.set(login, groupName);\n    });\n  });\n\n  const githubLoginToTeams = new Map<string, string[]>();\n  getKeys(config.teams || {}).forEach((teamName) => {\n    (config.teams as NonNullable<typeof config.teams>)[teamName].logins.forEach(\n      (login) => {\n        const teams = githubLoginToTeams.get(login);\n        if (teams) {\n          teams.push(teamName);\n        } else {\n          githubLoginToTeams.set(login, [teamName]);\n        }\n      },\n    );\n  });\n\n  const getReviewerGroups = (githubLogins: string[]) => [\n    ...new Set(\n      githubLogins\n        .map((githubLogin) => githubLoginToGroup.get(githubLogin))\n        .filter(Boolean),\n    ),\n  ];\n\n  return {\n    config,\n    getReviewerGroup: (githubLogin) => githubLoginToGroup.get(githubLogin),\n    getReviewerGroups: (githubLogins) => [\n      ...new Set(\n        githubLogins\n          .map((githubLogin) => githubLoginToGroup.get(githubLogin))\n          .filter(ExcludesFalsy),\n      ),\n    ],\n\n    getTeamsForLogin: (githubLogin) =>\n      githubLoginToTeams.get(githubLogin) || [],\n\n    reviewShouldWait: (\n      reviewerGroup,\n      requestedReviewers,\n      { includesReviewerGroup, includesWaitForGroups },\n    ) => {\n      if (!reviewerGroup) return false;\n\n      const requestedReviewerGroups = getReviewerGroups(\n        requestedReviewers.map((request) => request.login),\n      );\n\n      // contains another request of a reviewer in the same group\n      if (\n        includesReviewerGroup &&\n        requestedReviewerGroups.includes(reviewerGroup)\n      ) {\n        return true;\n      }\n\n      // contains a request from a dependent group\n      if (config.waitForGroups && includesWaitForGroups) {\n        const waitForGroups = config.waitForGroups;\n        return requestedReviewerGroups.some((group) =>\n          waitForGroups[reviewerGroup].includes(group),\n        );\n      }\n\n      return false;\n    },\n\n    slack: await slackPromise,\n  };\n};\n\nconst orgContextsPromise = new Map();\nconst orgContexts = new Map();\n\nexport const obtainOrgContext = (\n  context: Context<any>,\n  config: Config,\n): Promise<OrgContext> => {\n  const owner = context.payload.repository.owner;\n\n  const existingTeamContext = orgContexts.get(owner.login);\n  if (existingTeamContext) return existingTeamContext;\n\n  const existingPromise = orgContextsPromise.get(owner.login);\n  if (existingPromise) return Promise.resolve(existingPromise);\n\n  const promise = initTeamContext(context, config);\n  orgContextsPromise.set(owner.login, promise);\n\n  return promise.then((orgContext) => {\n    orgContextsPromise.delete(owner.login);\n    orgContexts.set(owner.login, orgContext);\n    return orgContext;\n  });\n};\n","/* eslint-disable max-lines */\n\nimport { Lock } from 'lock';\nimport { Context } from 'probot';\nimport { orgsConfigs, Config } from '../orgsConfigs';\n// eslint-disable-next-line import/no-cycle\nimport { autoMergeIfPossible } from '../pr-handlers/actions/autoMergeIfPossible';\nimport { initRepoLabels, LabelResponse, Labels } from './initRepoLabels';\nimport { obtainOrgContext, OrgContext } from './orgContext';\n\nexport interface LockedMergePr {\n  id: number;\n  number: number;\n  branch: string;\n}\n\ninterface RepoContextWithoutTeamContext<GroupNames extends string> {\n  labels: Labels;\n  protectedLabelIds: readonly LabelResponse['id'][];\n\n  hasNeedsReview: (labels: LabelResponse[]) => boolean;\n  hasRequestedReview: (labels: LabelResponse[]) => boolean;\n  hasChangesRequestedReview: (labels: LabelResponse[]) => boolean;\n  hasApprovesReview: (labels: LabelResponse[]) => boolean;\n  getNeedsReviewGroupNames: (labels: LabelResponse[]) => GroupNames[];\n\n  lockPROrPRS(\n    prIdOrIds: string | string[],\n    callback: () => Promise<void> | void,\n  ): Promise<void>;\n\n  getMergeLockedPr(): LockedMergePr;\n  addMergeLockPr(pr: LockedMergePr): void;\n  removePrFromAutomergeQueue(context: Context<any>, prNumber: number): void;\n  reschedule(context: Context<any>, pr: LockedMergePr): void;\n  pushAutomergeQueue(pr: LockedMergePr): void;\n}\n\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nexport type RepoContext<GroupNames extends string = any> = OrgContext<\n  GroupNames\n> &\n  RepoContextWithoutTeamContext<GroupNames>;\n\nasync function initRepoContext<GroupNames extends string>(\n  context: Context<any>,\n  config: Config<GroupNames>,\n): Promise<RepoContext<GroupNames>> {\n  const orgContext = await obtainOrgContext(context, config);\n  const repoContext = Object.create(orgContext);\n\n  const [labels] = await Promise.all([initRepoLabels(context, config)]);\n\n  const reviewGroupNames = Object.keys(config.groups) as GroupNames[];\n\n  const needsReviewLabelIds = reviewGroupNames\n    .map((key: GroupNames) => config.labels.review[key].needsReview)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const requestedReviewLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].requested)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const changesRequestedLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].changesRequested)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const approvedReviewLabelIds = reviewGroupNames\n    .map((key) => config.labels.review[key].approved)\n    .filter(Boolean)\n    .map((name) => labels[name].id);\n\n  const protectedLabelIds = [\n    ...requestedReviewLabelIds,\n    ...changesRequestedLabelIds,\n    ...approvedReviewLabelIds,\n  ];\n\n  const labelIdToGroupName = new Map<LabelResponse['id'], GroupNames>();\n  reviewGroupNames.forEach((key) => {\n    const reviewGroupLabels = config.labels.review[key] as any;\n    Object.keys(reviewGroupLabels).forEach((labelKey: string) => {\n      labelIdToGroupName.set(labels[reviewGroupLabels[labelKey]].id, key);\n    });\n  });\n\n  // const updateStatusCheck = (context, reviewGroup, statusInfo) => {};\n\n  const hasNeedsReview = (labels: LabelResponse[]) =>\n    labels.some((label) => needsReviewLabelIds.includes(label.id));\n  const hasRequestedReview = (labels: LabelResponse[]) =>\n    labels.some((label) => requestedReviewLabelIds.includes(label.id));\n  const hasChangesRequestedReview = (labels: LabelResponse[]) =>\n    labels.some((label) => changesRequestedLabelIds.includes(label.id));\n  const hasApprovesReview = (labels: LabelResponse[]) =>\n    labels.some((label) => approvedReviewLabelIds.includes(label.id));\n\n  const getNeedsReviewGroupNames = (labels: LabelResponse[]): GroupNames[] =>\n    labels\n      .filter((label) => needsReviewLabelIds.includes(label.id))\n      .map((label) => labelIdToGroupName.get(label.id))\n      .filter(ExcludesFalsy);\n\n  const lock = Lock();\n  let lockMergePr: LockedMergePr | undefined;\n  let automergeQueue: LockedMergePr[] = [];\n\n  const lockPROrPRS = (\n    prIdOrIds: string | string[],\n    callback: () => Promise<void> | void,\n  ): Promise<void> =>\n    new Promise((resolve, reject) => {\n      console.log('lock: try to lock pr', { prIdOrIds });\n      lock(prIdOrIds, async (createReleaseCallback) => {\n        const release = createReleaseCallback(() => {});\n        console.log('lock: lock acquired', { prIdOrIds });\n        try {\n          await callback();\n        } catch (err) {\n          console.log('lock: release pr (with error)', { prIdOrIds });\n          release();\n          reject(err);\n          return;\n        }\n        console.log('lock: release pr', { prIdOrIds });\n        release();\n        resolve();\n      });\n    });\n\n  const reschedule = (context: Context<any>, pr: LockedMergePr) => {\n    if (!pr) throw new Error('Cannot reschedule undefined');\n    context.log.info('reschedule', pr);\n    setTimeout(() => {\n      lockPROrPRS('reschedule', () => {\n        return lockPROrPRS(String(pr.id), async () => {\n          const prResult = await context.github.pulls.get(\n            context.repo({\n              pull_number: pr.number,\n            }),\n          );\n          await autoMergeIfPossible(context, repoContext, prResult.data);\n        });\n      });\n    }, 1000);\n  };\n\n  return Object.assign(repoContext, {\n    labels,\n    protectedLabelIds,\n    hasNeedsReview,\n    hasRequestedReview,\n    hasChangesRequestedReview,\n    hasApprovesReview,\n    getNeedsReviewGroupNames,\n\n    getMergeLockedPr: () => lockMergePr,\n    addMergeLockPr: (pr: LockedMergePr): void => {\n      console.log('merge lock: lock', pr);\n      if (lockMergePr && String(lockMergePr.number) === String(pr.number)) {\n        return;\n      }\n      if (lockMergePr) throw new Error('Already have lock');\n      lockMergePr = pr;\n    },\n    removePrFromAutomergeQueue: (context, prNumber: number | string): void => {\n      context.log('merge lock: remove', { prNumber });\n      if (lockMergePr && String(lockMergePr.number) === String(prNumber)) {\n        lockMergePr = automergeQueue.shift();\n        context.log('merge lock: next', { lockMergePr });\n        if (lockMergePr) {\n          reschedule(context, lockMergePr);\n        }\n      } else {\n        automergeQueue = automergeQueue.filter(\n          (value) => String(value.number) !== String(prNumber),\n        );\n      }\n    },\n    pushAutomergeQueue: (pr: LockedMergePr): void => {\n      console.log('merge lock: push queue', {\n        pr,\n        lockMergePr,\n        automergeQueue,\n      });\n      if (!automergeQueue.some((p) => p.number === pr.number)) {\n        automergeQueue.push(pr);\n      }\n    },\n    reschedule,\n\n    lockPROrPRS,\n  } as RepoContextWithoutTeamContext<GroupNames>);\n}\n\nconst repoContextsPromise = new Map<number, Promise<RepoContext>>();\nconst repoContexts = new Map<number, RepoContext>();\n\nexport const obtainRepoContext = (\n  context: Context<any>,\n): Promise<RepoContext> | RepoContext | null => {\n  const repo = context.payload.repository;\n  if (\n    repo.name === 'reviewflow-test' &&\n    process.env.REVIEWFLOW_NAME !== 'reviewflow-test'\n  ) {\n    return null;\n  }\n  const owner = repo.owner;\n  if (!orgsConfigs[owner.login]) {\n    console.warn(owner.login, Object.keys(orgsConfigs));\n    return null;\n  }\n  const key = repo.id;\n\n  const existingRepoContext = repoContexts.get(key);\n  if (existingRepoContext) return existingRepoContext;\n\n  const existingPromise = repoContextsPromise.get(key);\n  if (existingPromise) return Promise.resolve(existingPromise);\n\n  const promise = initRepoContext(context, orgsConfigs[owner.login]);\n  repoContextsPromise.set(key, promise);\n\n  return promise.then((repoContext) => {\n    repoContextsPromise.delete(key);\n    repoContexts.set(key, repoContext);\n    return repoContext;\n  });\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { obtainRepoContext, RepoContext } from '../context/repoContext';\n\nexport type Handler<T = any> = (\n  context: Context<T>,\n  repoContext: RepoContext,\n) => Promise<void>;\n\nexport type CallbackWithRepoContext = (\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const handlerPullRequestChange = async <\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  context: Context<T>,\n  callback: CallbackWithRepoContext,\n): Promise<void> => {\n  const repoContext = await obtainRepoContext(context);\n  if (!repoContext) return;\n\n  repoContext.lockPROrPRS(String(context.payload.pull_request.id), async () => {\n    await callback(repoContext);\n  });\n};\n\ntype CallbackContextAndRepoContext<T> = (\n  context: Context<T>,\n  repoContext: RepoContext,\n) => void | Promise<void>;\n\nexport const createHandlerPullRequestChange = <\n  T extends Webhooks.WebhookPayloadPullRequest\n>(\n  callback: CallbackContextAndRepoContext<T>,\n) => (context: Context<T>) => {\n  return handlerPullRequestChange(context, (repoContext) =>\n    callback(context, repoContext),\n  );\n};\n\nexport const createHandlerPullRequestsChange = <T>(\n  getPullRequests: (\n    context: Context<T>,\n    repoContext: RepoContext,\n  ) => { id: string | number }[],\n  callback: CallbackContextAndRepoContext<T>,\n) => async (context: Context<T>): Promise<void> => {\n  const repoContext = await obtainRepoContext(context);\n  if (!repoContext) return;\n\n  const prs = getPullRequests(context, repoContext);\n  if (prs.length === 0) return;\n  return repoContext.lockPROrPRS(prs.map((pr) => String(pr.id)), () =>\n    callback(context, repoContext),\n  );\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Handler } from '../utils';\n\nexport const autoAssignPRToCreator: Handler<\n  Webhooks.WebhookPayloadPullRequest\n> = async (context, repoContext) => {\n  if (!repoContext.config.autoAssignToCreator) return;\n\n  const pr = context.payload.pull_request;\n  if (pr.assignees.length !== 0) return;\n  if (pr.user.type === 'Bot') return;\n\n  await context.github.issues.addAssignees(\n    context.issue({\n      assignees: [pr.user.login],\n    }),\n  );\n};\n","export const cleanTitle = (title: string): string =>\n  title\n    .trim()\n    .replace(\n      /[\\s-]+\\[?\\s*([A-Za-z]+)[- ](\\d+)\\s*]?\\s*$/,\n      (s, arg1, arg2) => ` ${arg1.toUpperCase()}-${arg2}`,\n    )\n    .replace(/^([A-Za-z]+)[/:]\\s*/, (s, arg1) => `${arg1.toLowerCase()}: `)\n    .replace(/^Revert \"([^\"]+)\"$/, 'revert: $1')\n    .replace(/\\s+[[\\]]\\s*no\\s*issue\\s*[[\\]]$/, ' [no issue]')\n    // eslint-disable-next-line unicorn/no-unsafe-regex\n    .replace(/^(revert:.*)(\\s+\\(#\\d+\\))$/, '$1');\n","import { StatusInfo } from '../../../orgsConfigs/types';\nimport { parseBody } from './parseBody';\nimport { Options, optionsLabels } from './prOptions';\n\nconst toMarkdownOptions = (options: Record<Options, boolean>) => {\n  return optionsLabels\n    .map(\n      ({ name, label }) =>\n        `- [${options[name] ? 'x' : ' '}] <!-- reviewflow-${name} -->${label}`,\n    )\n    .join('\\n');\n};\n\nconst toMarkdownInfos = (infos: StatusInfo[]) => {\n  return infos\n    .map((info) => {\n      if (info.url) return `[${info.title}](${info.url})`;\n      return info.title;\n    })\n    .join('\\n');\n};\n\ninterface UpdatedBodyWithOptions {\n  body: string;\n  options?: Record<Options, boolean>;\n}\n\nexport const updateBody = (\n  body: string,\n  defaultConfig: Record<Options, boolean>,\n  infos?: StatusInfo[],\n  updateOptions?: Partial<Record<Options, boolean>>,\n): UpdatedBodyWithOptions => {\n  const parsed = parseBody(body, defaultConfig);\n  if (!parsed) {\n    console.info('could not parse body');\n    return { body };\n  }\n  const {\n    content,\n    ending,\n    reviewflowContentCol,\n    reviewflowContentColPrefix,\n    reviewflowContentColSuffix,\n    options,\n  } = parsed;\n\n  // eslint-disable-next-line no-nested-ternary\n  const infosParagraph = !infos\n    ? reviewflowContentCol.replace(\n        // eslint-disable-next-line unicorn/no-unsafe-regex\n        /^\\s*(?:(#### Infos:.*)?#### Options:)?.*$/s,\n        '$1',\n      )\n    : infos.length !== 0\n    ? `#### Infos:\\n${toMarkdownInfos(infos)}\\n`\n    : '';\n\n  const updatedOptions = !updateOptions\n    ? options\n    : { ...options, ...updateOptions };\n\n  return {\n    options: updatedOptions,\n    body: `${content}${reviewflowContentColPrefix}\n${infosParagraph}#### Options:\n${toMarkdownOptions(updatedOptions)}\n${reviewflowContentColSuffix}${ending || ''}`,\n  };\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\nimport { StatusError, StatusInfo } from '../../orgsConfigs/types';\nimport { cleanTitle } from './utils/cleanTitle';\nimport { updateBody } from './utils/updateBody';\nimport { autoMergeIfPossible } from './autoMergeIfPossible';\n\ninterface StatusWithInfo {\n  name: string;\n  info: StatusInfo;\n  error?: undefined;\n}\n\ninterface StatusWithError {\n  name: string;\n  error: StatusError;\n  info?: undefined;\n}\n\ntype Status = StatusWithInfo | StatusWithError;\n\nconst ExcludesFalsy = (Boolean as any) as <T>(\n  x: T | false | null | undefined,\n) => x is T;\n\nexport const editOpenedPR = async (\n  context: Context<Webhooks.WebhookPayloadPullRequest>,\n  repoContext: RepoContext,\n): Promise<{ skipAutoMerge: boolean }> => {\n  const repo = context.payload.repository;\n  const pr = context.payload.pull_request;\n\n  // do not lint pr from forks\n  if (pr.head.repo.id !== repo.id) return { skipAutoMerge: true };\n\n  const title = repoContext.config.trimTitle ? cleanTitle(pr.title) : pr.title;\n\n  const isPrFromBot = pr.user.type === 'Bot';\n\n  const statuses: Status[] = [];\n\n  const errorRule = repoContext.config.parsePR.title.find((rule) => {\n    if (rule.bot === false && isPrFromBot) return false;\n\n    const match = rule.regExp.exec(pr.title);\n    if (match === null) {\n      if (rule.status) {\n        statuses.push({ name: rule.status, error: rule.error });\n      }\n      return true;\n    }\n\n    if (rule.status && rule.statusInfoFromMatch) {\n      statuses.push({\n        name: rule.status,\n        info: rule.statusInfoFromMatch(match),\n      });\n      return false;\n    }\n\n    return false;\n  });\n\n  const date = new Date().toISOString();\n\n  const hasLintPrCheck = (await context.github.checks.listForRef(\n    context.repo({\n      ref: pr.head.sha,\n    }),\n  )).data.check_runs.find(\n    (check) => check.name === `${process.env.REVIEWFLOW_NAME}/lint-pr`,\n  );\n\n  await Promise.all<any>(\n    [\n      ...statuses.map(({ name, error, info }) =>\n        context.github.repos.createStatus(\n          context.repo({\n            context: `${process.env.REVIEWFLOW_NAME}/${name}`,\n            sha: pr.head.sha,\n            state: (error ? 'failure' : 'success') as 'failure' | 'success',\n            target_url: error ? undefined : (info as StatusInfo).url,\n            description: error ? error.title : (info as StatusInfo).title,\n          }),\n        ),\n      ),\n      hasLintPrCheck &&\n        context.github.checks.create(\n          context.repo({\n            name: `${process.env.REVIEWFLOW_NAME}/lint-pr`,\n            head_sha: pr.head.sha,\n            status: 'completed' as 'completed',\n            conclusion: (errorRule ? 'failure' : 'success') as\n              | 'failure'\n              | 'success',\n            started_at: date,\n            completed_at: date,\n            output: errorRule\n              ? errorRule.error\n              : {\n                  title: '✓ Your PR is valid',\n                  summary: '',\n                },\n          }),\n        ),\n      !hasLintPrCheck &&\n        context.github.repos.createStatus(\n          context.repo({\n            context: `${process.env.REVIEWFLOW_NAME}/lint-pr`,\n            sha: pr.head.sha,\n            state: (errorRule ? 'failure' : 'success') as 'failure' | 'success',\n            target_url: undefined,\n            description: errorRule\n              ? errorRule.error.title\n              : '✓ Your PR is valid',\n          }),\n        ),\n    ].filter(ExcludesFalsy),\n  );\n\n  const featureBranchLabel = repoContext.labels['feature-branch'];\n  const automergeLabel = repoContext.labels['merge/automerge'];\n\n  const prHasFeatureBranchLabel = Boolean(\n    featureBranchLabel &&\n      pr.labels.find((label): boolean => label.id === featureBranchLabel.id),\n  );\n\n  const prHasAutoMergeLabel = Boolean(\n    automergeLabel &&\n      pr.labels.find((label): boolean => label.id === automergeLabel.id),\n  );\n\n  const defaultOptions = {\n    ...repoContext.config.prDefaultOptions,\n    autoMerge: prHasAutoMergeLabel,\n    featureBranch: prHasFeatureBranchLabel,\n  };\n\n  const { body, options } = updateBody(pr.body, defaultOptions, statuses\n    .filter((status) => status.info && status.info.inBody)\n    .map((status) => status.info) as StatusInfo[]);\n\n  const hasDiffInTitle = pr.title !== title;\n  const hasDiffInBody = pr.body !== body;\n  if (hasDiffInTitle || hasDiffInBody) {\n    const update: Partial<Record<'title' | 'body', string>> = {};\n    if (hasDiffInTitle) {\n      update.title = title;\n      pr.title = title;\n    }\n    if (hasDiffInBody) {\n      update.body = body;\n      pr.body = body;\n    }\n\n    await context.github.issues.update(context.issue(update));\n  }\n\n  if (options && (featureBranchLabel || automergeLabel)) {\n    if (featureBranchLabel) {\n      if (prHasFeatureBranchLabel && !options.featureBranch) {\n        await context.github.issues.removeLabel(\n          context.issue({ name: featureBranchLabel.name }),\n        );\n      }\n      if (options.featureBranch && !prHasFeatureBranchLabel) {\n        await context.github.issues.addLabels(\n          context.issue({ labels: [featureBranchLabel.name] }),\n        );\n      }\n    }\n\n    if (automergeLabel) {\n      if (prHasAutoMergeLabel && !options.autoMerge) {\n        await context.github.issues.removeLabel(\n          context.issue({ name: automergeLabel.name }),\n        );\n        repoContext.removePrFromAutomergeQueue(context, pr.number);\n      }\n      if (options.autoMerge && !prHasAutoMergeLabel) {\n        const result = await context.github.issues.addLabels(\n          context.issue({ labels: [automergeLabel.name] }),\n        );\n        await autoMergeIfPossible(\n          context,\n          repoContext,\n          context.payload.pull_request,\n          result.data,\n        );\n      }\n      return { skipAutoMerge: true };\n    }\n  }\n\n  return { skipAutoMerge: false };\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { RepoContext } from '../../context/repoContext';\n\nconst addStatusCheck = async function<\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  context: Context<E>,\n  pr: any,\n  { state, description }: { state: 'failure' | 'success'; description: string },\n): Promise<void> {\n  const hasPrCheck = (await context.github.checks.listForRef(\n    context.repo({\n      ref: pr.head.sha,\n    }),\n  )).data.check_runs.find(\n    (check) => check.name === process.env.REVIEWFLOW_NAME,\n  );\n\n  context.log.info('add status check', { hasPrCheck, state, description });\n\n  if (hasPrCheck) {\n    await context.github.checks.create(\n      context.repo({\n        name: process.env.REVIEWFLOW_NAME as string,\n        head_sha: pr.head.sha,\n        started_at: pr.created_at,\n        status: 'completed',\n        conclusion: state,\n        completed_at: new Date().toISOString(),\n        output: {\n          title: description,\n          summary: '',\n        },\n      }),\n    );\n  } else {\n    await context.github.repos.createStatus(\n      context.repo({\n        context: process.env.REVIEWFLOW_NAME,\n        sha: pr.head.sha,\n        state,\n        target_url: undefined,\n        description,\n      }),\n    );\n  }\n};\n\nconst createFailedStatusCheck = <E extends Webhooks.WebhookPayloadPullRequest>(\n  context: Context<E>,\n  pr: any,\n  description: string,\n): Promise<void> =>\n  addStatusCheck(context, pr, {\n    state: 'failure',\n    description,\n  });\n\nexport const updateStatusCheckFromLabels = (\n  context: Context<any>,\n  repoContext: RepoContext,\n  pr: any = context.payload.pull_request,\n  labels: LabelResponse[] = pr.labels || [],\n): Promise<void> => {\n  context.log.info('updateStatusCheckFromLabels', {\n    labels: labels.map((l) => l && l.name),\n    hasNeedsReview: repoContext.hasNeedsReview(labels),\n    hasApprovesReview: repoContext.hasApprovesReview(labels),\n  });\n\n  if (pr.requested_reviewers.length !== 0) {\n    return createFailedStatusCheck(\n      context,\n      pr,\n      `Awaiting review from: ${pr.requested_reviewers\n        .map((rr: any) => rr.login)\n        .join(', ')}`,\n    );\n  }\n\n  if (repoContext.hasChangesRequestedReview(labels)) {\n    return createFailedStatusCheck(\n      context,\n      pr,\n      'Changes requested ! Push commits or discuss changes then re-request a review.',\n    );\n  }\n\n  const needsReviewGroupNames = repoContext.getNeedsReviewGroupNames(labels);\n\n  if (needsReviewGroupNames.length !== 0) {\n    return createFailedStatusCheck(\n      context,\n      pr,\n      `Awaiting review from: ${needsReviewGroupNames.join(\n        ', ',\n      )}. Perhaps request someone ?`,\n    );\n  }\n\n  if (!repoContext.hasApprovesReview(labels)) {\n    if (repoContext.config.requiresReviewRequest) {\n      return createFailedStatusCheck(\n        context,\n        pr,\n        'Awaiting review... Perhaps request someone ?',\n      );\n    }\n  }\n\n  // if (\n  //   repoContext.config.requiresReviewRequest &&\n  //   !repoContext.hasRequestedReview(labels)\n  // ) {\n  //   return  createFailedStatusCheck(\n  //     context,\n  //     pr,\n  //     'You need to request someone to review the PR',\n  //   );\n  //   return;\n  // }\n  // return  createInProgressStatusCheck(context);\n  // } else if (repoContext.hasApprovesReview(labels)) {\n  return addStatusCheck(context, pr, {\n    state: 'success',\n    description: '✓ PR ready to merge !',\n  });\n  // }\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { LabelResponse } from '../../context/initRepoLabels';\nimport { GroupLabels } from '../../orgsConfigs/types';\nimport { RepoContext } from '../../context/repoContext';\nimport { updateStatusCheckFromLabels } from './updateStatusCheckFromLabels';\n\nexport const updateReviewStatus = async <\n  E extends Webhooks.WebhookPayloadPullRequest,\n  GroupNames extends string = any\n>(\n  context: Context<E>,\n  repoContext: RepoContext,\n  reviewGroup: GroupNames,\n  {\n    add: labelsToAdd,\n    remove: labelsToRemove,\n  }: {\n    add?: (GroupLabels | false | undefined)[];\n    remove?: (GroupLabels | false | undefined)[];\n  },\n): Promise<LabelResponse[]> => {\n  context.log.info('updateReviewStatus', {\n    reviewGroup,\n    labelsToAdd,\n    labelsToRemove,\n  });\n\n  const pr = context.payload.pull_request;\n  let prLabels: LabelResponse[] = pr.labels || [];\n  if (!reviewGroup) return prLabels;\n\n  const newLabelNames = new Set<string>(\n    prLabels.map((label: LabelResponse) => label.name),\n  );\n\n  const toAdd = new Set<GroupLabels | string>();\n  const toAddNames = new Set<string>();\n  const toDelete = new Set<GroupLabels>();\n  const toDeleteNames = new Set<string>();\n  const labels = repoContext.labels;\n\n  const getLabelFromKey = (key: GroupLabels): undefined | LabelResponse => {\n    const reviewConfig = repoContext.config.labels.review[reviewGroup];\n    if (!reviewConfig) return undefined;\n\n    return reviewConfig[key] && labels[reviewConfig[key]]\n      ? labels[reviewConfig[key]]\n      : undefined;\n  };\n\n  if (labelsToAdd) {\n    labelsToAdd.forEach((key) => {\n      if (!key) return;\n      const label = getLabelFromKey(key);\n      if (!label || prLabels.some((prLabel) => prLabel.id === label.id)) {\n        return;\n      }\n      newLabelNames.add(label.name);\n      toAdd.add(key);\n      toAddNames.add(label.name);\n    });\n  }\n\n  if (labelsToRemove) {\n    labelsToRemove.forEach((key) => {\n      if (!key) return;\n      const label = getLabelFromKey(key);\n      if (!label) return;\n      const existing = prLabels.find((prLabel) => prLabel.id === label.id);\n      if (existing) {\n        newLabelNames.delete(existing.name);\n        toDelete.add(key);\n        toDeleteNames.add(existing.name);\n      }\n    });\n  }\n\n  // TODO move that elsewhere\n\n  repoContext.getTeamsForLogin(pr.user.login).forEach((teamName) => {\n    const team = repoContext.config.teams[teamName];\n    if (team.labels) {\n      team.labels.forEach((labelKey) => {\n        const label = repoContext.labels[labelKey];\n        if (label && !prLabels.some((prLabel) => prLabel.id === label.id)) {\n          newLabelNames.add(label.name);\n          toAdd.add(labelKey);\n        }\n      });\n    }\n  });\n\n  // if (process.env.DRY_RUN) return;\n\n  if (toAdd.size !== 0 || toDelete.size !== 0) {\n    if (toDelete.size === 0 || toDelete.size < 4) {\n      context.log.info('updateReviewStatus', {\n        reviewGroup,\n        toAdd: [...toAdd],\n        toDelete: [...toDelete],\n        toAddNames: [...toAddNames],\n        toDeleteNames: [...toDeleteNames],\n      });\n\n      if (toAdd.size !== 0) {\n        const result = await context.github.issues.addLabels(\n          context.issue({\n            labels: [...toAddNames],\n          }),\n        );\n        prLabels = result.data;\n      }\n\n      if (toDelete.size !== 0) {\n        for (const toDeleteName of [...toDeleteNames]) {\n          const result = await context.github.issues.removeLabel(\n            context.issue({\n              name: toDeleteName,\n            }),\n          );\n          prLabels = result.data;\n        }\n      }\n    } else {\n      const newLabelNamesArray = [...newLabelNames];\n\n      context.log.info('updateReviewStatus', {\n        reviewGroup,\n        toAdd: [...toAdd],\n        toDelete: [...toDelete],\n        oldLabels: prLabels.map((l: LabelResponse) => l.name),\n        newLabelNames: newLabelNamesArray,\n      });\n\n      const result = await context.github.issues.replaceLabels(\n        context.issue({\n          labels: newLabelNamesArray,\n        }),\n      );\n      prLabels = result.data;\n    }\n  }\n\n  // if (toAdd.has('needsReview')) {\n  //   createInProgressStatusCheck(context);\n  // } else if (\n  //   toDelete.has('needsReview') ||\n  //   (prLabels.length === 0 && toAdd.size === 1 && toAdd.has('approved'))\n  // ) {\n  await updateStatusCheckFromLabels(context, repoContext, pr, prLabels);\n  // }\n\n  return prLabels;\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\nimport { autoMergeIfPossible } from './autoMergeIfPossible';\n\nexport const autoApproveAndAutoMerge = async (\n  context: Context<Webhooks.WebhookPayloadPullRequest>,\n  repoContext: RepoContext,\n): Promise<boolean> => {\n  // const autoMergeLabel = repoContext.labels['merge/automerge'];\n  const codeApprovedLabel = repoContext.labels['code/approved'];\n  const prLabels = context.payload.pull_request.labels;\n  if (prLabels.find((l): boolean => l.id === codeApprovedLabel.id)) {\n    await context.github.pulls.createReview(\n      context.issue({ event: 'APPROVE' }),\n    );\n    await autoMergeIfPossible(context, repoContext);\n    return true;\n  }\n\n  return false;\n};\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoAssignPRToCreator } from './actions/autoAssignPRToCreator';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { autoApproveAndAutoMerge } from './actions/autoApproveAndAutoMerge';\n\nexport default function opened(app: Application): void {\n  app.on(\n    'pull_request.opened',\n    createHandlerPullRequestChange(\n      async (context, repoContext): Promise<void> => {\n        const fromRenovate = context.payload.pull_request.head.ref.startsWith(\n          'renovate/',\n        );\n\n        await Promise.all<unknown>([\n          autoAssignPRToCreator(context, repoContext),\n          editOpenedPR(context, repoContext),\n          fromRenovate\n            ? autoApproveAndAutoMerge(context, repoContext).then(\n                async (approved: boolean): Promise<void> => {\n                  if (!approved) {\n                    await updateReviewStatus(context, repoContext, 'dev', {\n                      add: ['needsReview'],\n                    });\n                  }\n                },\n              )\n            : updateReviewStatus(context, repoContext, 'dev', {\n                add: ['needsReview'],\n                remove: ['approved', 'changesRequested'],\n              }),\n        ]);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\nimport { parseBody } from './actions/utils/parseBody';\n\nexport default function closed(app: Application): void {\n  app.on(\n    'pull_request.closed',\n    createHandlerPullRequestChange(\n      async (context, repoContext): Promise<void> => {\n        const repo = context.payload.repository;\n        const pr = context.payload.pull_request;\n\n        if (pr.merged) {\n          const parsedBody =\n            pr.head.repo.id === repo.id &&\n            parseBody(pr.body, repoContext.config.prDefaultOptions);\n\n          await Promise.all([\n            repoContext.removePrFromAutomergeQueue(context, pr.number),\n            parsedBody && parsedBody.options.deleteAfterMerge\n              ? context.github.git\n                  .deleteRef(context.repo({ ref: `heads/${pr.head.ref}` }))\n                  .catch(() => {})\n              : undefined,\n          ]);\n        } else {\n          await Promise.all([\n            repoContext.removePrFromAutomergeQueue(context, pr.number),\n            updateReviewStatus(context, repoContext, 'dev', {\n              remove: ['needsReview'],\n            }),\n          ]);\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewRequested(app: Application): void {\n  app.on(\n    'pull_request.review_requested',\n    createHandlerPullRequestChange(\n      async (context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n\n        // ignore if sender is self (dismissed review rerequest review)\n        if (sender.type === 'Bot') return;\n\n        const pr = context.payload.pull_request;\n        const reviewer = (context.payload as any).requested_reviewer;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n        const shouldWait = false;\n        // repoContext.reviewShouldWait(reviewerGroup, pr.requested_reviewers, { includesWaitForGroups: true });\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const { data: reviews } = await context.github.pulls.listReviews(\n            context.issue({ per_page: 50 }),\n          );\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup &&\n              review.state === 'REQUEST_CHANGES' &&\n              // In case this is a rerequest for review\n              review.user.login !== reviewer.login,\n          );\n\n          if (!hasChangesRequestedInReviews) {\n            await updateReviewStatus(context, repoContext, reviewerGroup, {\n              add: ['needsReview', !shouldWait && 'requested'],\n              remove: ['approved', 'changesRequested'],\n            });\n          }\n        }\n\n        if (sender.login === reviewer.login) return;\n\n        if (!shouldWait && repoContext.slack) {\n          repoContext.slack.postMessage(\n            reviewer.login,\n            `:eyes: ${repoContext.slack.mention(\n              sender.login,\n            )} requests your review on ${pr.html_url} !\\n> ${pr.title}`,\n          );\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewRequestRemoved(app: Application): void {\n  app.on(\n    'pull_request.review_request_removed',\n    createHandlerPullRequestChange(\n      async (context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        const pr = context.payload.pull_request;\n        const reviewer = (context.payload as any).requested_reviewer;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const hasRequestedReviewsForGroup = repoContext.reviewShouldWait(\n            reviewerGroup,\n            pr.requested_reviewers,\n            {\n              includesReviewerGroup: true,\n            },\n          );\n\n          const { data: reviews } = await context.github.pulls.listReviews(\n            context.issue({ per_page: 50 }),\n          );\n\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'REQUEST_CHANGES',\n          );\n\n          const hasApprovedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'APPROVED',\n          );\n\n          const approved =\n            !hasRequestedReviewsForGroup &&\n            !hasChangesRequestedInReviews &&\n            hasApprovedInReviews;\n          await updateReviewStatus(context, repoContext, reviewerGroup, {\n            add: [\n              // if changes requested by the one which requests was removed\n              hasChangesRequestedInReviews && 'changesRequested',\n              // if was already approved by another member in the group and has no other requests waiting\n              approved && 'approved',\n            ],\n            // remove labels if has no other requests waiting\n            remove: [\n              approved && 'needsReview',\n              !hasRequestedReviewsForGroup &&\n                !hasChangesRequestedInReviews &&\n                'requested',\n            ],\n          });\n        }\n\n        if (sender.login === reviewer.login) return;\n\n        if (repoContext.slack) {\n          repoContext.slack.postMessage(\n            reviewer.login,\n            `:skull_and_crossbones: ${repoContext.slack.mention(\n              sender.login,\n            )} removed the request for your review on ${pr.html_url}`,\n          );\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewSubmitted(app: Application): void {\n  app.on(\n    'pull_request_review.submitted',\n    createHandlerPullRequestChange(\n      async (context, repoContext): Promise<void> => {\n        const pr = context.payload.pull_request;\n        const { user: reviewer, state } = (context.payload as any).review;\n        if (pr.user.login === reviewer.login) return;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n        let merged;\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const hasRequestedReviewsForGroup = repoContext.reviewShouldWait(\n            reviewerGroup,\n            pr.requested_reviewers,\n            {\n              includesReviewerGroup: true,\n              // TODO reenable this when accepted can notify request review to slack (dev accepted => design requested) and flag to disable for label (approved design ; still waiting for dev ?)\n              // includesWaitForGroups: true,\n            },\n          );\n          const { data: reviews } = await context.github.pulls.listReviews(\n            context.issue({ per_page: 50 }),\n          );\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'REQUEST_CHANGES',\n          );\n\n          const approved =\n            !hasRequestedReviewsForGroup &&\n            !hasChangesRequestedInReviews &&\n            state === 'approved';\n\n          const newLabels = await updateReviewStatus(\n            context,\n            repoContext,\n            reviewerGroup,\n            {\n              add: [\n                approved && 'approved',\n                state === 'changes_requested' && 'changesRequested',\n              ],\n              remove: [\n                approved && 'needsReview',\n                !(\n                  hasRequestedReviewsForGroup || state === 'changes_requested'\n                ) && 'requested',\n                state === 'approved' &&\n                  !hasChangesRequestedInReviews &&\n                  'changesRequested',\n                state === 'changes_requested' && 'approved',\n              ],\n            },\n          );\n\n          if (approved && !hasChangesRequestedInReviews) {\n            merged = await autoMergeIfPossible(\n              context,\n              repoContext,\n              pr,\n              newLabels,\n            );\n          }\n        }\n\n        const mention = repoContext.slack.mention(reviewer.login);\n        const prUrl = pr.html_url;\n\n        const message = (() => {\n          if (state === 'changes_requested') {\n            return `:x: ${mention} requests changes on ${prUrl}`;\n          }\n          if (state === 'approved') {\n            return `:clap: :white_check_mark: ${mention} approves ${prUrl}${\n              merged ? ' and PR is merged :tada:' : ''\n            }`;\n          }\n          return `:speech_balloon: ${mention} commented on ${prUrl}`;\n        })();\n\n        repoContext.slack.postMessage(pr.user.login, message);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { updateReviewStatus } from './actions/updateReviewStatus';\n\nexport default function reviewDismissed(app: Application): void {\n  app.on(\n    'pull_request_review.dismissed',\n    createHandlerPullRequestChange(\n      async (context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        const pr = context.payload.pull_request;\n        const reviewer = (context.payload as any).review.user;\n\n        const reviewerGroup = repoContext.getReviewerGroup(reviewer.login);\n\n        if (reviewerGroup && repoContext.config.labels.review[reviewerGroup]) {\n          const { data: reviews } = await context.github.pulls.listReviews(\n            context.issue({ per_page: 50 }),\n          );\n          const hasChangesRequestedInReviews = reviews.some(\n            (review) =>\n              repoContext.getReviewerGroup(review.user.login) ===\n                reviewerGroup && review.state === 'REQUEST_CHANGES',\n          );\n\n          await updateReviewStatus(context, repoContext, reviewerGroup, {\n            add: ['needsReview', 'requested'],\n            remove: [\n              !hasChangesRequestedInReviews && 'changesRequested',\n              'approved',\n            ],\n          });\n        }\n\n        if (repoContext.slack) {\n          if (sender.login === reviewer.login) {\n            repoContext.slack.postMessage(\n              pr.user.login,\n              `:skull: ${repoContext.slack.mention(\n                reviewer.login,\n              )} dismissed his review on ${pr.html_url}`,\n            );\n          } else {\n            repoContext.slack.postMessage(\n              reviewer.login,\n              `:skull: ${repoContext.slack.mention(\n                sender.login,\n              )} dismissed your review on ${pr.html_url}`,\n            );\n          }\n        }\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestChange } from './utils';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { updateStatusCheckFromLabels } from './actions/updateStatusCheckFromLabels';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function synchronize(app: Application): void {\n  app.on(\n    'pull_request.synchronize',\n    createHandlerPullRequestChange(\n      async (context, repoContext): Promise<void> => {\n        // old and new sha\n        // const { before, after } = context.payload;\n\n        await Promise.all([\n          editOpenedPR(context, repoContext),\n          // addStatusCheckToLatestCommit\n          updateStatusCheckFromLabels(context, repoContext),\n          // call autoMergeIfPossible to re-add to the queue when push is fixed\n          autoMergeIfPossible(context, repoContext),\n        ]);\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { editOpenedPR } from './actions/editOpenedPR';\nimport { createHandlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function edited(app: Application): void {\n  app.on(\n    'pull_request.edited',\n    createHandlerPullRequestChange(\n      async (context, repoContext): Promise<void> => {\n        const sender = context.payload.sender;\n        if (\n          sender.type === 'Bot' &&\n          sender.login === `${process.env.REVIEWFLOW_NAME}[bot]`\n        ) {\n          return;\n        }\n\n        const { skipAutoMerge } = await editOpenedPR(context, repoContext);\n        if (!skipAutoMerge) await autoMergeIfPossible(context, repoContext);\n      },\n    ),\n  );\n}\n","import Webhooks from '@octokit/webhooks';\nimport { Context } from 'probot';\nimport { RepoContext } from '../../context/repoContext';\nimport { updateBody } from './utils/updateBody';\nimport { Options } from './utils/prOptions';\n\nexport const updatePrBody = async <\n  E extends Webhooks.WebhookPayloadPullRequest\n>(\n  context: Context<E>,\n  repoContext: RepoContext,\n  updateOptions: Partial<Record<Options, boolean>>,\n): Promise<void> => {\n  const prBody = context.payload.pull_request.body;\n  const { body } = updateBody(\n    prBody,\n    repoContext.config.prDefaultOptions,\n    undefined,\n    updateOptions,\n  );\n\n  if (body !== prBody) {\n    await context.github.pulls.update(context.issue({ body }));\n  }\n};\n","import Webhooks from '@octokit/webhooks';\nimport { Application, Context } from 'probot';\nimport { handlerPullRequestChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\nimport { updateStatusCheckFromLabels } from './actions/updateStatusCheckFromLabels';\nimport { updatePrBody } from './actions/updatePrBody';\n\nexport default function labelsChanged(app: Application): void {\n  app.on(\n    ['pull_request.labeled', 'pull_request.unlabeled'],\n    async (context: Context<Webhooks.WebhookPayloadPullRequest>) => {\n      const sender = context.payload.sender;\n      const fromRenovate =\n        sender.type === 'Bot' && sender.login === 'renovate[bot]';\n      context.payload.pull_request.head.ref.startsWith('renovate/');\n\n      if (sender.type === 'Bot' && !fromRenovate) {\n        return;\n      }\n\n      await handlerPullRequestChange(context, async (repoContext) => {\n        const label = (context.payload as any).label;\n        if (fromRenovate) {\n          const codeApprovedLabel = repoContext.labels['code/approved'];\n          const autoMergeLabel = repoContext.labels['merge/automerge'];\n          if (context.payload.action === 'labeled') {\n            if (codeApprovedLabel && label.id === codeApprovedLabel.id) {\n              // const { data: reviews } = await context.github.pulls.listReviews(\n              //   context.issue({ per_page: 1 }),\n              // );\n              // if (reviews.length !== 0) {\n              await context.github.pulls.createReview(\n                context.issue({ event: 'APPROVE' }),\n              );\n              await updateStatusCheckFromLabels(\n                context,\n                repoContext,\n                context.payload.pull_request,\n              );\n              await updatePrBody(context, repoContext, {\n                autoMergeWithSkipCi: true,\n                // force label to avoid racing events (when both events are sent in the same time, reviewflow treats them one by one but the second event wont have its body updated)\n                autoMerge:\n                  autoMergeLabel &&\n                  context.payload.pull_request.labels.find(\n                    (l): boolean => l.id === autoMergeLabel.id,\n                  )\n                    ? true\n                    : repoContext.config.prDefaultOptions.autoMerge,\n              });\n              // }\n            } else if (autoMergeLabel && label.id === autoMergeLabel.id) {\n              await updatePrBody(context, repoContext, {\n                autoMerge: true,\n                // force label to avoid racing events (when both events are sent in the same time, reviewflow treats them one by one but the second event wont have its body updated)\n                // Note: si c'est renovate qui ajoute le label autoMerge, le label codeApprovedLabel n'aurait pu etre ajouté que par renovate également (on est a quelques secondes de l'ouverture de la pr par renovate)\n                autoMergeWithSkipCi:\n                  codeApprovedLabel &&\n                  context.payload.pull_request.labels.find(\n                    (l): boolean => l.id === codeApprovedLabel.id,\n                  )\n                    ? true\n                    : repoContext.config.prDefaultOptions.autoMergeWithSkipCi,\n              });\n            }\n            await autoMergeIfPossible(context, repoContext);\n          }\n          return;\n        }\n\n        if (repoContext.protectedLabelIds.includes(label.id)) {\n          if (context.payload.action === 'labeled') {\n            await context.github.issues.removeLabel(\n              context.issue({ name: label.name }),\n            );\n          } else {\n            await context.github.issues.addLabels(\n              context.issue({ labels: [label.name] }),\n            );\n          }\n          return;\n        }\n\n        await updateStatusCheckFromLabels(context, repoContext);\n\n        const featureBranchLabel = repoContext.labels['feature-branch'];\n        const automergeLabel = repoContext.labels['merge/automerge'];\n\n        if (\n          (featureBranchLabel && label.id === automergeLabel.id) ||\n          (automergeLabel && label.id === automergeLabel.id)\n        ) {\n          const option: 'featureBranch' | 'autoMerge' =\n            featureBranchLabel && label.id === featureBranchLabel.id\n              ? 'featureBranch'\n              : 'autoMerge';\n          await updatePrBody(context, repoContext, {\n            [option]: context.payload.action === 'labeled',\n          });\n        } else if (context.payload.action === 'labeled') {\n          if (\n            repoContext.labels['merge/automerge'] &&\n            label.id === repoContext.labels['merge/automerge'].id\n          ) {\n            await autoMergeIfPossible(context, repoContext);\n          }\n        }\n      });\n    },\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestsChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function checkrunCompleted(app: Application): void {\n  app.on(\n    'check_run.completed',\n    createHandlerPullRequestsChange(\n      (context) => context.payload.check_run.pull_requests,\n      async (context, repoContext) => {\n        await Promise.all(\n          context.payload.check_run.pull_requests.map((pr) =>\n            context.github.pulls\n              .get(\n                context.repo({\n                  number: pr.number,\n                }),\n              )\n              .then((prResult) => {\n                return autoMergeIfPossible(context, repoContext, prResult.data);\n              }),\n          ),\n        );\n      },\n    ),\n  );\n}\n","import { Application } from 'probot';\nimport { createHandlerPullRequestsChange } from './utils';\nimport { autoMergeIfPossible } from './actions/autoMergeIfPossible';\n\nexport default function checksuiteCompleted(app: Application): void {\n  app.on(\n    'check_suite.completed',\n    createHandlerPullRequestsChange(\n      (context) => context.payload.check_suite.pull_requests,\n      async (context, repoContext) => {\n        await Promise.all(\n          context.payload.check_suite.pull_requests.map((pr) =>\n            context.github.pulls\n              .get(\n                context.repo({\n                  number: pr.number,\n                }),\n              )\n              .then((prResult) => {\n                return autoMergeIfPossible(context, repoContext, prResult.data);\n              }),\n          ),\n        );\n      },\n    ),\n  );\n}\n","import Webhooks from '@octokit/webhooks';\nimport { Application, Context } from 'probot';\nimport { LockedMergePr } from '../context/repoContext';\nimport { createHandlerPullRequestsChange } from './utils';\n\nconst isSameBranch = (\n  context: Context<Webhooks.WebhookPayloadStatus>,\n  lockedPr: LockedMergePr,\n): boolean => {\n  if (!lockedPr) return false;\n  return !!context.payload.branches.find((b) => b.name === lockedPr.branch);\n};\n\nexport default function status(app: Application): void {\n  app.on(\n    'status',\n    createHandlerPullRequestsChange(\n      (context, repoContext): LockedMergePr[] => {\n        const lockedPr = repoContext.getMergeLockedPr();\n        if (!lockedPr) return [];\n\n        if (isSameBranch(context, lockedPr)) {\n          return [lockedPr];\n        }\n\n        return [];\n      },\n      (context, repoContext): void => {\n        const lockedPr = repoContext.getMergeLockedPr();\n        // check if changed\n        if (isSameBranch(context, lockedPr)) {\n          repoContext.reschedule(context, lockedPr);\n        }\n      },\n    ),\n  );\n}\n","// import { MongoStore, MongoConnection, MongoModel } from 'liwi-mongo';\nimport { MongoConnection } from 'liwi-mongo';\n\n// export interface PrEventsModel extends MongoModel {\n//   owner: string;\n//   repo: string;\n//   prId: string;\n//   prNumber: string;\n//   event: string;\n// }\n\nexport interface MongoStores {\n  connection: MongoConnection;\n  // prEvents: MongoStore<PrEventsModel>;\n}\n\nif (!process.env.MONGO_DB) {\n  throw new Error('MONGO_DB is missing in process.env');\n}\n\nexport default function init(): MongoStores {\n  const connection = new MongoConnection(\n    new Map([\n      ['host', process.env.MONGO_HOST || 'localhost'],\n      ['port', process.env.MONGO_PORT || '27017'],\n      ['database', process.env.MONGO_DB as string],\n    ]),\n  );\n\n  // const prEvents = new MongoStore<PrEventsModel>(connection, 'prEvents');\n  // prEvents.collection.then((coll) => {\n  //   coll.createIndex({ owner: 1, repo: 1, ???: 1 });\n  // });\n\n  // return { connection, prEvents };\n  return { connection };\n}\n","import React from 'react';\n\ninterface LayoutProps {\n  lang?: string;\n  title?: string;\n  children: React.ReactNode;\n}\n\nexport default function Layout({\n  lang = 'en',\n  title = process.env.NAME,\n  children,\n}: LayoutProps) {\n  return (\n    <html lang={lang}>\n      <head>\n        <meta charSet=\"UTF-8\" />\n        <meta name=\"robots\" content=\"noindex\" />\n        <title>{title}</title>\n        <link\n          rel=\"stylesheet\"\n          type=\"text/css\"\n          href=\"https://christophe.hurpeau.com/index.css\"\n        />\n        <style>{`html,body,html body\n            #container{height:100%} footer{position:absolute;bottom:5px;left:0;right:0;}`}</style>\n      </head>\n      <body>{children}</body>\n    </html>\n  );\n}\n","import { create } from 'simple-oauth2';\n\nif (!process.env.GITHUB_CLIENT_ID) {\n  throw new Error('Missing env variable: GITHUB_CLIENT_ID');\n}\n\nif (!process.env.GITHUB_CLIENT_SECRET) {\n  throw new Error('Missing env variable: GITHUB_CLIENT_SECRET');\n}\n\nexport const oauth2 = create({\n  client: {\n    id: process.env.GITHUB_CLIENT_ID,\n    secret: process.env.GITHUB_CLIENT_SECRET,\n  },\n  auth: {\n    tokenHost: 'https://github.com',\n    tokenPath: '/login/oauth/access_token',\n    authorizePath: '/login/oauth/authorize',\n  },\n});\n","import { randomBytes } from 'crypto';\nimport { promisify } from 'util';\n\nconst randomBytesPromisified = promisify(randomBytes);\n\nexport async function randomBase64(size: number): Promise<string> {\n  const buffer = await randomBytesPromisified(size);\n  return buffer.toString('base64');\n}\n\nexport async function randomHex(size: number): Promise<string> {\n  const buffer = await randomBytesPromisified(size);\n  return buffer.toString('hex');\n}\n","/* eslint-disable max-lines */\n\nimport { promisify } from 'util';\nimport Octokit from '@octokit/rest';\nimport { Request, Response } from 'express';\nimport cookieParser from 'cookie-parser';\nimport { sign, verify } from 'jsonwebtoken';\nimport React from 'react';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { Application } from 'probot';\nimport { MongoStores } from './mongo';\nimport Layout from './views/Layout';\nimport * as githubAuth from './auth/github';\nimport { randomHex } from './utils/random';\n\nif (!process.env.AUTH_SECRET_KEY) {\n  throw new Error('Missing env variable: AUTH_SECRET_KEY');\n}\n\nconst AUTH_SECRET_KEY: string = process.env.AUTH_SECRET_KEY;\n\nconst signPromisified: any = promisify(sign);\nconst verifyPromisified: any = promisify(verify);\n\nconst secure =\n  !!process.env.SECURE_COOKIE && process.env.SECURE_COOKIE !== 'false';\n\nconst createRedirectUri = (req: Request, strategy: string) => {\n  const host = `http${secure ? 's' : ''}://${req.hostname}${\n    req.hostname === 'localhost' ? `:${process.env.PORT}` : ''\n  }`;\n  return `${host}/${strategy}/login-response`;\n};\n\ninterface AuthInfo {\n  login: string;\n  accessToken: string;\n  time: number;\n}\n\nconst readAuthCookie = (\n  req: Request,\n  strategy: string,\n): undefined | Promise<undefined | AuthInfo> => {\n  const cookie = req.cookies[`auth_${strategy}`];\n  if (!cookie) return;\n\n  return verifyPromisified(cookie, AUTH_SECRET_KEY, {\n    algorithm: 'HS512',\n    audience: req.headers['user-agent'],\n  });\n};\n\nexport default async function appRouter(\n  app: Application,\n  mongoStuff: MongoStores,\n): Promise<void> {\n  const router = app.route('/');\n  const api = await app.auth();\n  router.use(cookieParser());\n\n  router.get('/', (req, res) => {\n    res.redirect('/gh');\n  });\n\n  router.get('/gh', async (req, res) => {\n    const strategy = 'gh';\n    const authInfo = await readAuthCookie(req, strategy);\n    if (!authInfo) {\n      return res.redirect('/gh/login');\n    }\n\n    const octokit = new Octokit({ auth: `token ${authInfo.accessToken}` });\n    const { data } = await octokit.repos.list({ per_page: 100 });\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h4>Your repositories</h4>\n            <ul>\n              {data.map((repo: any) => (\n                <li key={repo.id}>\n                  <a href={`/gh/repository/${repo.owner.login}/${repo.name}`}>\n                    {repo.name}\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </div>\n          {data.length === 100 && (\n            <div>We currently have a limit to 100 repositories</div>\n          )}\n        </Layout>,\n      ),\n    );\n  });\n\n  router.get('/gh/login', async (req: Request, res: Response) => {\n    const strategy = 'gh';\n    if (await readAuthCookie(req, strategy)) {\n      return res.redirect('/gh');\n    }\n\n    const state = await randomHex(8);\n    res.cookie(`auth_${strategy}_${state}`, strategy, {\n      maxAge: 10 * 60 * 1000,\n      httpOnly: true,\n      secure,\n    });\n\n    const redirectUri = githubAuth.oauth2.authorizationCode.authorizeURL({\n      redirect_uri: createRedirectUri(req, strategy),\n      scope: 'read:user,repo',\n      state,\n      // grant_type: options.grantType,\n      // access_type: options.accessType,\n      // login_hint: req.query.loginHint,\n      // include_granted_scopes: options.includeGrantedScopes,\n    });\n\n    // console.log(redirectUri);\n\n    res.redirect(redirectUri);\n  });\n\n  router.get('/gh/login-response', async (req, res) => {\n    if (req.query.error) {\n      res.send(req.query.error_description);\n      return;\n    }\n\n    const strategy = 'gh';\n    const code = req.query.code;\n    const state = req.query.state;\n    const cookieName = `auth_${strategy}_${state}`;\n    const cookie = req.cookies && req.cookies[cookieName];\n    if (!cookie) {\n      // res.redirect(`/${strategy}/login`);\n      res.send(\n        '<html><body>No cookie for this state. <a href=\"/gh/login\">Retry ?</a></body></html>',\n      );\n      return;\n    }\n    res.clearCookie(cookieName);\n\n    const result = await githubAuth.oauth2.authorizationCode.getToken({\n      code,\n      redirect_uri: createRedirectUri(req, strategy),\n    });\n\n    if (!result) {\n      // res.redirect(`/${strategy}/login`);\n      res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              Could not get access token. <a href=\"/gh/login\">Retry ?</a>\n            </div>\n          </Layout>,\n        ),\n      );\n      return;\n    }\n\n    const accessToken = result.access_token;\n    const octokit = new Octokit({ auth: `token ${accessToken}` });\n    const user = await octokit.users.getAuthenticated({});\n    const login = user.data.login;\n\n    const token = await signPromisified(\n      { login, accessToken, time: Date.now() },\n      AUTH_SECRET_KEY,\n      {\n        algorithm: 'HS512',\n        audience: req.headers['user-agent'],\n        expiresIn: '10 days',\n      },\n    );\n\n    res.cookie(`auth_${strategy}`, token, {\n      httpOnly: true,\n      secure,\n    });\n\n    res.redirect('/gh');\n  });\n\n  router.get('/gh/repository/:owner/:repository', async (req, res) => {\n    const strategy = 'gh';\n    const authInfo = await readAuthCookie(req, strategy);\n    if (!authInfo) {\n      return res.redirect('/gh/login');\n    }\n\n    const octokit = new Octokit({ auth: `token ${authInfo.accessToken}` });\n    const { data } = await octokit.repos.get({\n      owner: req.params.owner,\n      repo: req.params.repository,\n    });\n\n    if (!data) {\n      return res.status(404).send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>repo not found</div>\n          </Layout>,\n        ),\n      );\n    }\n\n    if (!data.permissions.admin) {\n      return res.status(401).send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              not authorized to see this repo, you need to have admin permission\n            </div>\n          </Layout>,\n        ),\n      );\n    }\n\n    const { data: data2 } = await api.apps\n      .getRepoInstallation({\n        owner: req.params.owner,\n        repo: req.params.repository,\n      })\n      .catch((err) => {\n        return { status: err.status, data: undefined };\n      });\n\n    if (!data2) {\n      return res.send(\n        renderToStaticMarkup(\n          <Layout>\n            <div>\n              {process.env.REVIEWFLOW_NAME} {\"isn't\"} installed on this repo. Go\n              to{' '}\n              <a\n                href={`https://github.com/apps/${\n                  process.env.REVIEWFLOW_NAME\n                }/installations/new`}\n              >\n                Github Configuration\n              </a>{' '}\n              to add it.\n            </div>\n          </Layout>,\n        ),\n      );\n    }\n\n    res.send(\n      renderToStaticMarkup(\n        <Layout>\n          <div>\n            <h4>{req.params.repository}</h4>\n          </div>\n        </Layout>,\n      ),\n    );\n  });\n}\n","import 'dotenv/config';\nimport { Probot, Application } from 'probot';\nimport openedHandler from './pr-handlers/opened';\nimport closedHandler from './pr-handlers/closed';\nimport reviewRequestedHandler from './pr-handlers/reviewRequested';\nimport reviewRequestRemovedHandler from './pr-handlers/reviewRequestRemoved';\nimport reviewSubmittedHandler from './pr-handlers/reviewSubmitted';\nimport reviewDismissedHandler from './pr-handlers/reviewDismissed';\nimport synchromizeHandler from './pr-handlers/synchronize';\nimport editedHandler from './pr-handlers/edited';\nimport labelsChanged from './pr-handlers/labelsChanged';\nimport checkrunCompleted from './pr-handlers/checkrunCompleted';\nimport checksuiteCompleted from './pr-handlers/checksuiteCompleted';\nimport status from './pr-handlers/status';\nimport mongoInit from './mongo';\nimport appRouter from './appRouter';\n\nif (!process.env.REVIEWFLOW_NAME) process.env.REVIEWFLOW_NAME = 'reviewflow';\nconsole.log({ name: process.env.REVIEWFLOW_NAME });\n\n// const getConfig = require('probot-config')\n// const { MongoClient } = require('mongodb');\n\n// const connect = MongoClient.connect(process.env.MONGO_URL);\n// const db = connect.then(client => client.db(process.env.MONGO_DB));\n\n// let config = await getConfig(context, 'reviewflow.yml');\n\n// eslint-disable-next-line import/no-commonjs\nProbot.run((app: Application) => {\n  const mongoStores = mongoInit();\n  appRouter(app, mongoStores);\n\n  openedHandler(app);\n  closedHandler(app);\n  reviewRequestedHandler(app);\n  reviewRequestRemovedHandler(app);\n\n  // app.on('pull_request.closed', async context => {\n\n  // });\n\n  // app.on('pull_request.reopened', async context => {\n\n  // });\n\n  reviewSubmittedHandler(app);\n  reviewDismissedHandler(app);\n  labelsChanged(app);\n  synchromizeHandler(app);\n  editedHandler(app);\n\n  checkrunCompleted(app);\n  checksuiteCompleted(app);\n  status(app);\n});\n"],"names":["config","slackToken","process","env","ORNIKAR_SLACK_TOKEN","autoAssignToCreator","trimTitle","requiresReviewRequest","prDefaultOptions","featureBranch","autoMergeWithSkipCi","autoMerge","deleteAfterMerge","parsePR","title","regExp","error","summary","bot","status","statusInfoFromMatch","match","issue","inBody","url","groups","dev","JulienBreux","ORNIKAR_EMAIL_DOMAIN","abarreir","arthurflachs","rigma","damienorny","darame07","Pixy","christophehurpeau","HugoGarrido","LentnerStefan","CorentinAndre","Mxime","tilap","vlbr","design","jperriere","CoralineColasse","teams","archis","logins","labels","backends","frontends","waitForGroups","list","name","color","review","ci","inProgress","succeeded","failed","needsReview","requested","changesRequested","approved","orgsConfigs","ornikar","options","optionsRegexps","map","option","regexp","RegExp","optionsLabels","label","commentStart","commentEnd","regexpCols","regexpReviewflowCol","parseOptions","content","defaultConfig","reduce","acc","exec","parseBody","description","reviewFlowCol","reviewflowContent","ending","reviewFlowColMatch","reviewflowContentCol","reviewflowContentColPrefix","reviewflowContentColSuffix","hasFailedStatusOrChecks","context","repoContext","pr","checks","github","listForRef","repo","ref","head","sha","per_page","failedChecks","data","check_runs","filter","check","conclusion","length","log","info","id","combinedStatus","repos","getCombinedStatusForRef","state","failedStatuses","statuses","autoMergeIfPossible","payload","pull_request","prLabels","autoMergeLabel","createMergeLockPrFromPr","number","branch","find","l","debug","prId","prNumber","removePrFromAutomergeQueue","hasNeedsReview","hasRequestedReview","lockedPr","getMergeLockedPr","pushAutomergeQueue","addMergeLockPr","mergeable","undefined","prResult","pulls","get","pull_number","merged","mergeable_state","reschedule","startsWith","body","includes","renovateRebaseBody","replace","issues","update","base","merge","owner","login","parsedBody","mergeResult","merge_method","commit_title","commit_message","Boolean","err","message","initRepoLabels","listLabelsForRepo","finalLabels","labelKey","labelConfig","Object","entries","labelColor","slice","existingLabel","result","createLabel","current_name","updateLabel","getKeys","o","keys","ExcludesFalsy","initTeamSlack","mention","postMessage","Promise","resolve","githubLoginToSlackEmail","groupName","assign","slackClient","WebClient","allUsers","users","limit","members","values","email","member","user","profile","console","warn","im","open","channel","membersMap","Map","getUserFromGithubLogin","githubLogin","text","DRY_RUN","chat","initTeamContext","slackPromise","githubLoginToGroup","forEach","set","githubLoginToTeams","teamName","push","getReviewerGroups","githubLogins","Set","getReviewerGroup","getTeamsForLogin","reviewShouldWait","reviewerGroup","requestedReviewers","includesReviewerGroup","includesWaitForGroups","requestedReviewerGroups","request","some","group","slack","orgContextsPromise","orgContexts","obtainOrgContext","repository","existingTeamContext","existingPromise","promise","then","orgContext","delete","initRepoContext","create","all","reviewGroupNames","needsReviewLabelIds","key","requestedReviewLabelIds","changesRequestedLabelIds","approvedReviewLabelIds","protectedLabelIds","labelIdToGroupName","reviewGroupLabels","lock","Lock","lockMergePr","automergeQueue","lockPROrPRS","prIdOrIds","callback","reject","createReleaseCallback","release","Error","setTimeout","String","hasChangesRequestedReview","hasApprovesReview","getNeedsReviewGroupNames","shift","value","p","repoContextsPromise","repoContexts","obtainRepoContext","REVIEWFLOW_NAME","existingRepoContext","handlerPullRequestChange","createHandlerPullRequestChange","createHandlerPullRequestsChange","getPullRequests","prs","autoAssignPRToCreator","assignees","type","addAssignees","cleanTitle","trim","s","arg1","arg2","toUpperCase","toLowerCase","toMarkdownOptions","join","toMarkdownInfos","infos","updateBody","updateOptions","parsed","infosParagraph","updatedOptions","editOpenedPR","skipAutoMerge","isPrFromBot","errorRule","rule","date","Date","toISOString","hasLintPrCheck","createStatus","target_url","head_sha","started_at","completed_at","output","featureBranchLabel","automergeLabel","prHasFeatureBranchLabel","prHasAutoMergeLabel","defaultOptions","hasDiffInTitle","hasDiffInBody","removeLabel","addLabels","addStatusCheck","hasPrCheck","created_at","createFailedStatusCheck","updateStatusCheckFromLabels","requested_reviewers","rr","needsReviewGroupNames","updateReviewStatus","reviewGroup","add","labelsToAdd","remove","labelsToRemove","newLabelNames","toAdd","toAddNames","toDelete","toDeleteNames","getLabelFromKey","reviewConfig","prLabel","existing","team","size","toDeleteName","newLabelNamesArray","oldLabels","replaceLabels","autoApproveAndAutoMerge","codeApprovedLabel","createReview","event","opened","app","on","fromRenovate","closed","git","deleteRef","catch","reviewRequested","sender","reviewer","requested_reviewer","reviews","listReviews","hasChangesRequestedInReviews","html_url","reviewRequestRemoved","hasRequestedReviewsForGroup","hasApprovedInReviews","reviewSubmitted","newLabels","prUrl","reviewDismissed","synchronize","edited","updatePrBody","prBody","labelsChanged","action","checkrunCompleted","check_run","pull_requests","checksuiteCompleted","check_suite","isSameBranch","branches","b","MONGO_DB","init","connection","MongoConnection","MONGO_HOST","MONGO_PORT","Layout","lang","NAME","children","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","oauth2","client","secret","auth","tokenHost","tokenPath","authorizePath","randomBytesPromisified","promisify","randomBytes","randomHex","buffer","toString","AUTH_SECRET_KEY","signPromisified","sign","verifyPromisified","verify","secure","SECURE_COOKIE","createRedirectUri","req","strategy","host","hostname","PORT","readAuthCookie","cookie","cookies","algorithm","audience","headers","appRouter","router","route","api","use","cookieParser","res","redirect","authInfo","octokit","Octokit","accessToken","send","renderToStaticMarkup","maxAge","httpOnly","redirectUri","githubAuth","authorizationCode","authorizeURL","redirect_uri","scope","query","error_description","code","cookieName","clearCookie","getToken","access_token","getAuthenticated","token","time","now","expiresIn","params","permissions","admin","data2","apps","getRepoInstallation","Probot","run","mongoStores","mongoInit","openedHandler","closedHandler","reviewRequestedHandler","reviewRequestRemovedHandler","reviewSubmittedHandler","reviewDismissedHandler","synchromizeHandler","editedHandler"],"mappings":"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"}